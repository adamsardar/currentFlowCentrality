// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dcPinvDense
arma::mat dcPinvDense(arma::mat X);
RcppExport SEXP _currentFlowCentrality_dcPinvDense(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(dcPinvDense(X));
    return rcpp_result_gen;
END_RCPP
}
// standardPinv
arma::mat standardPinv(arma::mat X);
RcppExport SEXP _currentFlowCentrality_standardPinv(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(standardPinv(X));
    return rcpp_result_gen;
END_RCPP
}
// calculateCurrentFlowDistance
NumericVector calculateCurrentFlowDistance(NumericMatrix graphLaplacianInv);
RcppExport SEXP _currentFlowCentrality_calculateCurrentFlowDistance(SEXP graphLaplacianInvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type graphLaplacianInv(graphLaplacianInvSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateCurrentFlowDistance(graphLaplacianInv));
    return rcpp_result_gen;
END_RCPP
}
// singleSourceTargetFlow
arma::vec singleSourceTargetFlow(arma::mat Gpinv, arma::sp_mat adjacency, int sourceIndex, int sinkIndex);
RcppExport SEXP _currentFlowCentrality_singleSourceTargetFlow(SEXP GpinvSEXP, SEXP adjacencySEXP, SEXP sourceIndexSEXP, SEXP sinkIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gpinv(GpinvSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type adjacency(adjacencySEXP);
    Rcpp::traits::input_parameter< int >::type sourceIndex(sourceIndexSEXP);
    Rcpp::traits::input_parameter< int >::type sinkIndex(sinkIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(singleSourceTargetFlow(Gpinv, adjacency, sourceIndex, sinkIndex));
    return rcpp_result_gen;
END_RCPP
}
// calculateAverageCurrentFlowBetweeness
NumericVector calculateAverageCurrentFlowBetweeness(NumericMatrix graphLaplacianInv, arma::sp_mat adjacency);
RcppExport SEXP _currentFlowCentrality_calculateAverageCurrentFlowBetweeness(SEXP graphLaplacianInvSEXP, SEXP adjacencySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type graphLaplacianInv(graphLaplacianInvSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type adjacency(adjacencySEXP);
    rcpp_result_gen = Rcpp::wrap(calculateAverageCurrentFlowBetweeness(graphLaplacianInv, adjacency));
    return rcpp_result_gen;
END_RCPP
}
// calculateResistiveDistances
NumericMatrix calculateResistiveDistances(NumericMatrix graphLaplacianInv);
RcppExport SEXP _currentFlowCentrality_calculateResistiveDistances(SEXP graphLaplacianInvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type graphLaplacianInv(graphLaplacianInvSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateResistiveDistances(graphLaplacianInv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_currentFlowCentrality_dcPinvDense", (DL_FUNC) &_currentFlowCentrality_dcPinvDense, 1},
    {"_currentFlowCentrality_standardPinv", (DL_FUNC) &_currentFlowCentrality_standardPinv, 1},
    {"_currentFlowCentrality_calculateCurrentFlowDistance", (DL_FUNC) &_currentFlowCentrality_calculateCurrentFlowDistance, 1},
    {"_currentFlowCentrality_singleSourceTargetFlow", (DL_FUNC) &_currentFlowCentrality_singleSourceTargetFlow, 4},
    {"_currentFlowCentrality_calculateAverageCurrentFlowBetweeness", (DL_FUNC) &_currentFlowCentrality_calculateAverageCurrentFlowBetweeness, 2},
    {"_currentFlowCentrality_calculateResistiveDistances", (DL_FUNC) &_currentFlowCentrality_calculateResistiveDistances, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_currentFlowCentrality(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
